import { useSearchParams } from "react-router-dom";
import { db } from "../lib/firebase";
import {
  doc,
  getDoc,
  collection,
  addDoc,
  query,
  where,
  getDocs,
  updateDoc,
} from "firebase/firestore";
import { useEffect, useState } from "react";
import { auth } from "../lib/firebase"; // –ò–º–ø–æ—Ä—Ç–∏—Ä–∞–º–µ auth –æ—Ç Firebase
import { onAuthStateChanged } from "firebase/auth";

// –î–µ—Ñ–∏–Ω–∏—Ä–∞–º–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∏ –∑–∞ —Ç–∏–ø–æ–≤–µ—Ç–µ
interface Ad {
  start: string;
  end: string;
  date: string;
  seats: number;
  car?: string;
  description?: string;
  createdAt: any;
  stops?: string[];
}

interface User {
  name: string;
  rating: number;
  profilePicture?: string;
}

const OfferDetails = () => {
  const [ad, setAd] = useState<Ad | null>(null);
  const [user, setUser] = useState<User | null>(null);
  const [rating, setRating] = useState<number | null>(null); // –¢–µ–∫—É—â —Ä–µ–π—Ç–∏–Ω–≥ –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è
  const [hasRated, setHasRated] = useState<boolean>(false); // –î–∞–ª–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –≤–µ—á–µ –µ –≥–ª–∞—Å—É–≤–∞–ª
  const [loading, setLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);
  const [currentUserId, setCurrentUserId] = useState<string | null>(null); // –°—ä—Ö—Ä–∞–Ω—è–≤–∞–º–µ —Ç–µ–∫—É—â–∏—è –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª
  const [hoveredRating, setHoveredRating] = useState<number | null>(null); // –°—ä—Ö—Ä–∞–Ω—è–≤–∞–º–µ —Ä–µ–π—Ç–∏–Ω–≥–∞, –≤—ä—Ä—Ö—É –∫–æ–π—Ç–æ –µ –º–∏—à–∫–∞—Ç–∞

  // –°—ä—Å—Ç–æ—è–Ω–∏—è –∑–∞ —Å—ä–æ–±—â–µ–Ω–∏—è—Ç–∞
  const [successMessage, setSuccessMessage] = useState<string | null>(null);
  const [errorMessage, setErrorMessage] = useState<string | null>(null);

  const [searchParams] = useSearchParams();
  const id = searchParams.get("id");
  const uid = searchParams.get("uid"); // –ò–∑–≤–ª–∏—á–∞–º–µ `uid` –æ—Ç URL –ø–∞—Ä–∞–º–µ—Ç—Ä–∏—Ç–µ

  // –ò–∑–ø–æ–ª–∑–≤–∞–º–µ onAuthStateChanged –∑–∞ –¥–∞ —Å–ª–µ–¥–∏–º –ø—Ä–æ–º–µ–Ω–∏ –≤ —Å—ä—Å—Ç–æ—è–Ω–∏–µ—Ç–æ –Ω–∞ –∞–≤—Ç–µ–Ω—Ç–∏–∫–∞—Ü–∏—è—Ç–∞
  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, (user) => {
      if (user) {
        setCurrentUserId(user.uid); // –ó–∞–ø–∏—Å–≤–∞–º–µ UID –Ω–∞ —Ç–µ–∫—É—â–∏—è –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª
      } else {
        setCurrentUserId(null); // –ù—è–º–∞ –≤–ª–µ–∑–Ω–∞–ª –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª
      }
    });

    return () => unsubscribe(); // –û—Ç–ø–∏—Å–≤–∞–Ω–µ –æ—Ç —Å–ª—É—à–∞—Ç–µ–ª—è –ø—Ä–∏ –∏–∑–ª–∏–∑–∞–Ω–µ
  }, []);

  useEffect(() => {
    const fetchDetails = async () => {
      try {
        setLoading(true);

        // –ó–∞—Ä–µ–∂–¥–∞–º–µ –æ–±—è–≤–∞—Ç–∞ –ø–æ –Ω–µ–π–Ω–æ—Ç–æ ID
        if (id) {
          const adDoc = await getDoc(doc(db, "ads", id));
          if (adDoc.exists()) {
            setAd(adDoc.data() as Ad);
          } else {
            setError("–û–±—è–≤–∞—Ç–∞ –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞.");
          }
        }

        // –ó–∞—Ä–µ–∂–¥–∞–º–µ –¥–∞–Ω–Ω–∏—Ç–µ –∑–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è –ø–æ –Ω–µ–≥–æ–≤–æ—Ç–æ ID
        if (uid) {
          const userDoc = await getDoc(doc(db, "users", uid));
          if (userDoc.exists()) {
            setUser(userDoc.data() as User);

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ —Ç–µ–∫—É—â–∏—è—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª –≤–µ—á–µ –µ –≥–ª–∞—Å—É–≤–∞–ª
            if (currentUserId) {
              const q = query(
                collection(db, "ratings"),
                where("fromUserId", "==", currentUserId),
                where("toUserId", "==", uid)
              );
              const querySnapshot = await getDocs(q);
              if (!querySnapshot.empty) {
                setHasRated(true);
              }
            }
          } else {
            setError("–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞.");
          }
        }
      } catch (err) {
        console.error("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –¥–∞–Ω–Ω–∏—Ç–µ:", err);
        setError("–ù–µ—É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –¥–∞–Ω–Ω–∏—Ç–µ.");
      } finally {
        setLoading(false);
      }
    };

    fetchDetails();
  }, [id, uid, currentUserId]); // –°–ª–µ–¥–∏–º –∑–∞ –ø—Ä–æ–º–µ–Ω–∏ –≤ currentUserId

  const handleRating = async (value: number) => {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –≤–µ—á–µ –µ –≥–ª–∞—Å—É–≤–∞–ª
    if (hasRated || !uid || !currentUserId) {
      // –ü–æ–∫–∞–∑–≤–∞–º–µ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ –≤–µ—á–µ –ø–æ—Å—Ç–∞–≤–µ–Ω —Ä–µ–π—Ç–∏–Ω–≥
      setErrorMessage("–í–µ—á–µ —Å—Ç–µ –≥–ª–∞—Å—É–≤–∞–ª–∏!");
      setTimeout(() => {
        setErrorMessage(null); // –°–∫—Ä–∏–≤–∞–º–µ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ —Å–ª–µ–¥ 3 —Å–µ–∫—É–Ω–¥–∏
      }, 3000);
      return;
    }

    try {
      // –ó–∞–ø–∞–∑–≤–∞–Ω–µ –Ω–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ –≤ –±–∞–∑–∞—Ç–∞
      await addDoc(collection(db, "ratings"), {
        fromUserId: currentUserId,
        toUserId: uid,
        rating: value,
      });

      // –û–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ —Å—Ä–µ–¥–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥
      const userRatingsQuery = query(
        collection(db, "ratings"),
        where("toUserId", "==", uid)
      );
      const ratingsSnapshot = await getDocs(userRatingsQuery);

      const ratings = ratingsSnapshot.docs.map((doc) => doc.data().rating);
      const averageRating = ratings.reduce((a, b) => a + b, 0) / ratings.length;

      // –ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä–∞–º–µ –ª–æ–∫–∞–ª–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥
      if (user) {
        setUser((prevUser) => ({
          ...prevUser!,
          rating: averageRating, // –û–±–Ω–æ–≤—è–≤–∞–º–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ —Å –Ω–æ–≤–∞—Ç–∞ —Å—Ç–æ–π–Ω–æ—Å—Ç
        }));
      }

      setHasRated(true);
      setRating(value);

      // –ü–æ–∫–∞–∑–≤–∞–º–µ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ —É—Å–ø–µ—à–µ–Ω —Ä–µ–π—Ç–∏–Ω–≥
      setSuccessMessage("–†–µ–π—Ç–∏–Ω–≥—ä—Ç –µ –∑–∞–ø–∏—Å–∞–Ω —É—Å–ø–µ—à–Ω–æ!");

      // –°–∫—Ä–∏–≤–∞–º–µ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ —Å–ª–µ–¥ 3 —Å–µ–∫—É–Ω–¥–∏
      setTimeout(() => {
        setSuccessMessage(null);
      }, 3000);
    } catch (err) {
      console.error("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø–æ—Å—Ç–∞–≤—è–Ω–µ –Ω–∞ —Ä–µ–π—Ç–∏–Ω–≥:", err);
      // –ü–æ–∫–∞–∑–≤–∞–º–µ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ –≥—Ä–µ—à–∫–∞, –∞–∫–æ –≤—ä–∑–Ω–∏–∫–Ω–µ –Ω–µ—â–æ –Ω–µ–æ—á–∞–∫–≤–∞–Ω–æ
      setErrorMessage("–í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–≤–∞–Ω–µ –Ω–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞.");
      setTimeout(() => {
        setErrorMessage(null); // –°–∫—Ä–∏–≤–∞–º–µ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ —Å–ª–µ–¥ 3 —Å–µ–∫—É–Ω–¥–∏
      }, 3000);
    }
  };

  if (loading) {
    return <p>–ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –æ–±—è–≤–∞—Ç–∞...</p>;
  }

  if (error) {
    return <p>{error}</p>;
  }

  if (!ad) {
    return <p>–ù–µ –Ω–∞–º–µ—Ä–∏—Ö–º–µ –æ–±—è–≤–∞—Ç–∞.</p>;
  }

  const formattedDate = ad.createdAt.toDate().toLocaleString("bg-BG", {
    weekday: "long",
    year: "numeric",
    month: "long",
    day: "numeric",
    hour: "2-digit",
    minute: "2-digit",
  });

  return (
    <div className="bg-white shadow-lg rounded-lg p-10 max-w-5xl mx-auto my-10 relative">
      <div className="absolute bottom-4 right-4 text-sm text-gray-500">
        –°—ä–∑–¥–∞–¥–µ–Ω–æ –Ω–∞: {formattedDate}
      </div>
      <div className="flex flex-col lg:flex-row gap-8">
        <div className="flex-1">
          <h2 className="text-yellow-500 text-lg font-bold">–ù–∞—á–∞–ª–Ω–∞ —Ç–æ—á–∫–∞</h2>
          <p className="text-gray-800 mb-4">{ad.start}</p>
          {/* –û—Å—Ç–∞–Ω–∞–ª–∏—Ç–µ –¥–∞–Ω–Ω–∏ */}
          <h2 className="text-yellow-500 text-lg font-bold">–ö—Ä–∞–π–Ω–∞ —Ç–æ—á–∫–∞</h2>
          <p className="text-gray-800 mb-4">{ad.end}</p>

          <h2 className="text-yellow-500 text-lg font-bold">
            –î–∞—Ç–∞ –Ω–∞ –ø—ä—Ç—É–≤–∞–Ω–µ—Ç–æ
          </h2>
          <p className="text-gray-800 mb-4">{ad.date}</p>

          <h2 className="text-yellow-500 text-lg font-bold">–°–≤–æ–±–æ–¥–Ω–∏ –º–µ—Å—Ç–∞</h2>
          <p className="text-gray-800 mb-4">{ad.seats}</p>

          <h2 className="text-yellow-500 text-lg font-bold">–ê–≤—Ç–æ–º–æ–±–∏–ª</h2>
          <p className="text-gray-800 mb-4">{ad.car || "–ù–µ –µ –ø–æ—Å–æ—á–µ–Ω"}</p>

          <h2 className="text-yellow-500 text-lg font-bold">–û–ø–∏—Å–∞–Ω–∏–µ</h2>
          <p className="text-gray-800 mb-4">
            {ad.description || "–ù–µ –µ –ø–æ—Å–æ—á–µ–Ω–æ"}
          </p>

          <h2 className="text-yellow-500 text-lg font-bold">–°–ø–∏—Ä–∫–∏</h2>
          <ul className="text-gray-800 list-disc ml-5">
            {ad.stops && ad.stops.length > 0
              ? ad.stops.map((stop, index) => (
                  <li key={index} className="mb-2">
                    {stop}
                  </li>
                ))
              : "–ù—è–º–∞ –¥–æ–±–∞–≤–µ–Ω–∏ —Å–ø–∏—Ä–∫–∏"}
          </ul>
        </div>

        <div className="flex-shrink-0 w-full lg:w-72 flex flex-col items-center bg-gray-50 p-6 rounded-lg shadow-md">
          {user ? (
            <>
              <div className="w-32 h-32 rounded-full border-2 border-yellow-500 flex items-center justify-center text-gray-500 text-6xl">
                üë§
              </div>
              <h3 className="text-gray-800 text-xl font-bold mt-4">
                {user.name}
              </h3>
              <div className="flex items-center mt-2">
                {Array(5)
                  .fill(null)
                  .map((_, index) => (
                    <span
                      key={index}
                      className={`text-lg cursor-pointer ${
                        index < (hoveredRating ?? Math.round(user.rating))
                          ? "text-yellow-500"
                          : "text-gray-300"
                      }`}
                      onClick={() => handleRating(index + 1)}
                      onMouseEnter={() => setHoveredRating(index + 1)}
                      onMouseLeave={() => setHoveredRating(null)}
                    >
                      ‚òÖ
                    </span>
                  ))}
              </div>
              <p className="text-sm text-gray-600 mt-2">
                –†–µ–π—Ç–∏–Ω–≥: {user.rating.toFixed(1)}
              </p>
              {successMessage && (
                <p className="text-sm text-green-600 mt-2">{successMessage}</p>
              )}
              {errorMessage && (
                <p className="text-sm text-red-600 mt-2">{errorMessage}</p>
              )}
              <button className="mt-4 bg-green-500 text-white font-bold py-2 px-6 rounded-tr-xl rounded-bl-xl hover:bg-green-600 transition-all">
                –ò–∑–ø—Ä–∞—Ç–∏ —Å—ä–æ–±—â–µ–Ω–∏–µ
              </button>
            </>
          ) : (
            <p className="text-gray-800 mb-4">
              –ù–µ –º–æ–∂–µ–º –¥–∞ –Ω–∞–º–µ—Ä–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è.
            </p>
          )}
        </div>
      </div>
    </div>
  );
};

export default OfferDetails;
